---
import { getCollection, render } from "astro:content";
import dayjs from "dayjs";
import { RelativeDate } from "src/components/RelativeDate/RelativeDate";
import ProseLayout from "src/layouts/ProseLayout.astro";

const events = await getCollection("now");
events.sort((a, b) => {
  return dayjs(b.data.date).isBefore(dayjs(a.data.date)) ? -1 : 1;
});

const title = "Now";
const description = "Whatâ€™s Eva up to?";
---

<ProseLayout title={title} description={description}>
  <h2 class="visually-hidden">Latest entries</h2>
  <ul class="events">
    {
      events.map(async (event) => {
        const { Content } = await render(event);

        return (
          <li class="event">
            <div class="dot" aria-hidden />
            <span class="heading">
              <RelativeDate date={event.data.date} client:load />
            </span>
            <div class="line" aria-hidden />
            <div class="content">
              <Content />
            </div>
          </li>
        );
      })
    }
    <li class="event">
      <div class="dot" aria-hidden></div>
      <span class="heading">Awhile ago</span>
      <div class="content">
        <p>
          I discovered <a href="https://nownownow.com/"
            >https://nownownow.com/</a
          >, which talks about building a <code>/now</code> page for sharing brief
          updates on how things are going <strong>right now</strong>, as if
          catching up with a friend for the first time in awhile. Big life
          picture stuff. Sounds nice. Maybe I'll make one.
        </p>
      </div>
    </li>
  </ul>

  <style lang="scss">
    .events {
      list-style: none;
      padding: 0;
      display: flex;
      flex-direction: column;
    }

    .event {
      display: grid;
      grid-template-columns: var(--space-s) 1fr;
      grid-template-areas:
        "dot heading"
        "line content";
      column-gap: var(--space-m);
      justify-content: center;

      &::before {
        content: "";
      }
    }

    .dot {
      grid-area: dot;
      border-radius: var(--radius-full);
      width: var(--space-s);
      height: var(--space-s);
      background-color: var(--gray-7);
      place-self: center center;
    }

    .line {
      grid-area: line;
      width: 2px;
      background-color: var(--gray-7);
      position: absolute;
      top: 0;
      bottom: 0;
      justify-self: center;
    }

    .heading {
      all: unset;
      font-size: var(--step-0);
      color: var(--gray-11);
      grid-area: heading;
    }

    .content {
      grid-area: content;
    }

    .event:not(:last-child) .content {
      padding-block-end: var(--space-xl);
    }
  </style>
</ProseLayout>

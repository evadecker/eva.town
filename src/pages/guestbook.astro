---
import { db, Guestbook as GuestbookDB } from "astro:db";
import GuestbookEntries from "../components/Guestbook/GuestbookEntries.astro";
import GuestbookPagination from "../components/Guestbook/GuestbookPagination.astro";
import { NotecardComposer } from "../components/Notecard/NotecardComposer";
import BaseLayout from "../layouts/BaseLayout.astro";

// Server-render page
export const prerender = false;

// Get the current page from search params
const currentPage = Number(Astro.url.searchParams.get("page")) || 1;

// Redirect page=1 to base URL
if (currentPage === 1 && Astro.url.searchParams.has("page")) {
  return Astro.redirect("/guestbook");
}

const isFirstPage = currentPage === 1;

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const author = formData.get("author") as string;
  const content = formData.get("content") as string;
  const url = formData.get("url") as string;
  const theme = formData.get("theme") as string;
  const honeypot = formData.get("special");

  if (
    !honeypot &&
    typeof author === "string" &&
    typeof content === "string" &&
    content.length <= 140 &&
    typeof url === "string" &&
    typeof theme === "string"
  ) {
    // Extremely basic spam filtering to protect against bots
    const isSpam = content.includes("<a href") || content.includes("href=");

    await db.insert(GuestbookDB).values({
      author,
      content,
      url: url || undefined,
      theme: Number.parseInt(theme, 10),
      isSpam,
    });

    return Astro.redirect("/guestbook");
  }
}

const title = "Guestbook";
const description = "Leave a message in eva.town.";
---

<BaseLayout
  title={title}
  description={description}
  includeFooter
  padBottom
  ogImage="/og/guestbook.png"
  ogAlt="A collection of hand-drawn postcards. The middle one has a flower drawn with a green highlighter."
>
  <h1 class="visually-hidden">Guestbook</h1>
  <div class="notecards">
    {isFirstPage && <NotecardComposer client:load />}
    <GuestbookEntries currentPage={currentPage} />
  </div>
  <GuestbookPagination currentPage={currentPage} />
</BaseLayout>

<style lang="scss">
  .notecards {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: flex-start;
    gap: var(--space-2xl);
    padding: var(--space-xl);
    overflow: hidden;
  }
</style>

<script>
  import * as Fathom from "fathom-client";

  document.addEventListener("astro:page-load", () => {
    document
      .querySelector("[data-fathom='explanation']")
      ?.addEventListener("click", () => {
        Fathom.trackEvent("guestbook: learn more");
      });
  });
</script>
